/* Generated by Together */

#include "ageG_D3DRenderStates.h"
#include <TriBase.h>
#include "ageG_D3DTextureStageStates.h"
#include "ageG_D3DSamplerStates.h"
#include "AGE.h"
age_Result ageG_D3DRenderStates::SetRS(D3DRENDERSTATETYPE RS,
						   DWORD dwValue)
{
	// In der Debug-Version wird geprüft, ob RS in Ordnung ist.
#ifdef _DEBUG
	if(RS < 0 || RS > 204)
	{
		// Render-State ist nicht gültig!
		TB_ERROR("Ungültiges Render-State!", TB_ERROR);
	}
#endif

	// Wenn das Render-State schon gesetzt ist, direkt abbrechen
	if(m_RS.adwRS[RS] == dwValue) return TB_OK;
	else
	{
		// Render-State setzen und in die Tabelle schreiben
		m_pD3DDevice->SetRenderState(RS, dwValue);
		m_RS.adwRS[RS] = dwValue;
	}

	return TB_OK;
}
age_Result ageG_D3DRenderStates::SetRSF(D3DRENDERSTATETYPE RS,
							float fValue)
{
	// In der Debug-Version wird geprüft, ob RS in Ordnung ist.
#ifdef _DEBUG
	if(RS < 0 || RS > 204)
	{
		// Render-State ist nicht gültig!
		TB_ERROR("Ungültiges Render-State!", TB_ERROR);
	}
#endif

	// Wenn das Render-State schon gesetzt ist, direkt abbrechen
	if(m_RS.afRS[RS] == fValue) return TB_OK;
	else
	{
		// Render-State setzen und in die Tabelle schreiben
		m_pD3DDevice->SetRenderState(RS, *((DWORD*)(&fValue)));
		m_RS.afRS[RS] = fValue;
	}

	return TB_OK;
}
DWORD ageG_D3DRenderStates::GetRS(D3DRENDERSTATETYPE RS)
{
	// In der Debug-Version wird geprüft, ob RS in Ordnung ist.
#ifdef _DEBUG
	if(RS < 0 || RS > 204)
	{
		// Render-State ist nicht gültig!
		TB_ERROR("Ungültiges Render-State!", 0xEEEEEEEE);
	}
#endif

	// Auf die Tabelle zugreifen
	return m_RS.adwRS[RS];
}
float ageG_D3DRenderStates::GetRSF(D3DRENDERSTATETYPE RS)
{
	// In der Debug-Version wird geprüft, ob RS in Ordnung ist.
#ifdef _DEBUG
	if(RS < 0 || RS > 204)
	{
		// Render-State ist nicht gültig!
		TB_ERROR("Ungültiges Render-State!", -10000000.0f);
	}
#endif

	// Auf die Tabelle zugreifen
	return m_RS.afRS[RS];
}
